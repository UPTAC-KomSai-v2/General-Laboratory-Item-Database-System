
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

public class GUITransactionHistoryPanel extends JPanel{
    private CardLayout cardLayout;
    private Branding branding;
    private JButton screen1BackBtn;
    private JPanel screen1;

    public GUITransactionHistoryPanel(Branding branding, JButton tranBackBtn ){
        this.screen1BackBtn = tranBackBtn;
        this.branding = branding;
        this.setLayout(cardLayout);
        this.setBackground(branding.lightgray);
        this.setPreferredSize(new Dimension(900, 500));
        this.setBorder(BorderFactory.createMatteBorder(5, 5, 5, 5, branding.maroon));

        initializeScreen1();

        this.add(screen1, "Panel 1");
    }
    
    public void initializeScreen1(){
        screen1 = new JPanel();
        screen1.setLayout(new GridBagLayout());
        screen1.setBorder(BorderFactory.createEmptyBorder(20, 0, 0, 0));
        screen1.setBackground(branding.lightgray);

        JPanel scrn1TransactionContentPanel = new JPanel(new GridLayout(0,1,0,20));
        scrn1TransactionContentPanel.setBorder(BorderFactory.createEmptyBorder(0, 30, 30, 30));

        // To be replaced by the final sql to java implementation 
        String[][] entries = {
            {"Borrow", "Roberto, Jack Cole", "202300000", "2:43 PM", "1 03 Feb 2023"},
            {"Return", "Roberto, Jack Cole", "202300000", "5:23 PM", "2 03 Feb 2023"},
            {"Borrow", "Montes, Jhun Kenneth", "10030302", "11:22 AM", "3 05 Feb 2023"},
            {"Return", "Montes, Jhun Kenneth", "10030302", "3:22 PM", "4 05 Feb 2023"},
            {"Borrow", "Roberto, Jack Cole", "202300000", "2:43 PM", "5 03 Feb 2023"},
            {"Return", "Roberto, Jack Cole", "202300000", "5:23 PM", "6 03 Feb 2023"},
            {"Borrow", "Montes, Jhun Kenneth", "10030302", "11:22 AM", "7 05 Feb 2023"},
            {"Return", "Montes, Jhun Kenneth", "10030302", "3:22 PM", "8 05 Feb 2023"},
            {"Borrow", "Roberto, Jack Cole", "202300000", "2:43 PM", "9 03 Feb 2023"},
            {"Return", "Roberto, Jack Cole", "202300000", "5:23 PM", "10 03 Feb 2023"},
            {"Borrow", "Montes, Jhun Kenneth", "10030302", "11:22 AM", "11 05 Feb 2023"},
            {"Return", "Montes, Jhun Kenneth", "10030302", "3:22 PM", "12 05 Feb 2023"},
        };
        
        for (String[] tuple: entries){
            int i = 0;
            JLabel stateLabel = new JLabel();
            switch (tuple[i++]) {
                case "Borrow" -> stateLabel.setIcon(new ImageIcon(branding.borrowIcon));
                case "Return" -> stateLabel.setIcon(new ImageIcon(branding.returnIcon));
                default -> System.err.println("Transaction History Label Error");
            }
            JLabel nameLabel = new JLabel(tuple[i++]);
            JLabel studentIdLabel = new JLabel(tuple[i++]);
            JLabel timeLabel = new JLabel(tuple[i++]);
            JLabel dateLabel = new JLabel(tuple[i++]);

            nameLabel.setForeground(branding.white);
            studentIdLabel.setForeground(branding.white);
            timeLabel.setForeground(branding.white);
            dateLabel.setForeground(branding.white);

            JPanel statePanel = new JPanel();
            JPanel namePanel = new JPanel();
            JPanel studentIdPanel = new JPanel();
            JPanel timePanel = new JPanel();
            JPanel datePanel = new JPanel();

            statePanel.setLayout(new BorderLayout());
            namePanel.setLayout(new BorderLayout());
            studentIdPanel.setLayout(new BorderLayout());
            timePanel.setLayout(new BorderLayout());
            datePanel.setLayout(new BorderLayout());

            statePanel.setPreferredSize(new Dimension(30, 70));
            namePanel.setPreferredSize(new Dimension(70, 70));
            studentIdPanel.setPreferredSize(new Dimension(50, 70));
            timePanel.setPreferredSize(new Dimension(50, 70));
            datePanel.setPreferredSize(new Dimension(50, 70));

            statePanel.setOpaque(false);
            namePanel.setOpaque(false);
            studentIdPanel.setOpaque(false);
            timePanel.setOpaque(false);
            datePanel.setOpaque(false);

            statePanel.add(stateLabel, BorderLayout.WEST);
            namePanel.add(nameLabel, BorderLayout.WEST);
            studentIdPanel.add(studentIdLabel, BorderLayout.WEST);
            timePanel.add(timeLabel, BorderLayout.WEST);
            datePanel.add(dateLabel, BorderLayout.WEST);

            JPanel tupleInfoPanel = new JPanel();
            tupleInfoPanel.setBorder(BorderFactory.createEmptyBorder(0, 20, 0, 0));
            tupleInfoPanel.setLayout(new GridBagLayout());
            tupleInfoPanel.setBackground(branding.maroon);
            GridBagConstraints tupleInfoPanelGBC = new GridBagConstraints();
            tupleInfoPanelGBC.fill = GridBagConstraints.HORIZONTAL;
            tupleInfoPanelGBC.gridx = 0;
            tupleInfoPanelGBC.ipadx = 50;
            tupleInfoPanelGBC.weightx = 0.1;
            tupleInfoPanel.add(statePanel, tupleInfoPanelGBC);
            tupleInfoPanelGBC.gridx++;
            tupleInfoPanelGBC.ipadx = 150;
            tupleInfoPanelGBC.weightx = 0.3;
            tupleInfoPanel.add(namePanel, tupleInfoPanelGBC);
            tupleInfoPanelGBC.gridx++;
            tupleInfoPanelGBC.ipadx = 100;
            tupleInfoPanelGBC.weightx = 0.2;
            tupleInfoPanel.add(studentIdPanel, tupleInfoPanelGBC);
            tupleInfoPanelGBC.gridx++;
            tupleInfoPanelGBC.ipadx = 100;
            tupleInfoPanelGBC.weightx = 0.2;
            tupleInfoPanel.add(timePanel, tupleInfoPanelGBC);
            tupleInfoPanelGBC.gridx++;
            tupleInfoPanelGBC.ipadx = 100;
            tupleInfoPanelGBC.weightx = 0.2;
            tupleInfoPanel.add(datePanel, tupleInfoPanelGBC);
            scrn1TransactionContentPanel.add(tupleInfoPanel);
        }

        JScrollPane scrollContentPanel = new JScrollPane(scrn1TransactionContentPanel);
        scrollContentPanel.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scrollContentPanel.getVerticalScrollBar().setUnitIncrement(16);
        scrollContentPanel.setBorder(null);
        branding.reskinScrollBar(scrollContentPanel);

        JPanel scrn1MenuPanel = new JPanel(new FlowLayout(FlowLayout.RIGHT, 15, 10));
        scrn1MenuPanel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 28));
        scrn1MenuPanel.setBackground(branding.maroon);
        scrn1MenuPanel.setOpaque(false);

        screen1BackBtn.setPreferredSize(new Dimension(150, 30));
        screen1BackBtn.setBackground(branding.maroon);
        screen1BackBtn.setForeground(branding.lightergray);
        scrn1MenuPanel.add(screen1BackBtn);

        GridBagConstraints screen1GBC = new GridBagConstraints();
        screen1GBC.fill = GridBagConstraints.BOTH;
        screen1GBC.weightx = 1;
        screen1GBC.weighty = 0.9;
        screen1GBC.gridx = 0;
        screen1GBC.gridy = 0;
        screen1.add(scrollContentPanel, screen1GBC);
        screen1GBC.weighty = 0.01;
        screen1GBC.gridy = 1;
        screen1.add(scrn1MenuPanel, screen1GBC);


        System.out.println("hello");
    }
}
